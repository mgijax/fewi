<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
        
    <!-- Exposes fewi.properties to be used in @Value annotations -->
    <context:property-placeholder 
    	location="WEB-INF/properties/fewi.properties,
    		WEB-INF/properties/common.solr.properties,
    		WEB-INF/properties/common.fewi.properties,
    		WEB-INF/properties/common.es.properties" 
    />

    <!-- Exposes externalUrls.properties as a property bean. -->
    <util:properties id="externalUrls" location="WEB-INF/properties/externalUrls.properties" />

    <!-- Exposes GlobalConfig.properties and fewi.properties files as a 
        property bean.  Values cascade so thast the last one set overrides prior values-->
    <bean id="configBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>WEB-INF/properties/GlobalConfig.properties</value>
                <value>WEB-INF/properties/fewi.properties</value>
                <value>WEB-INF/properties/common.fewi.properties</value>
                <value>WEB-INF/properties/common.solr.properties</value>
                <value>WEB-INF/properties/common.es.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- Packages to scan for @Controller & @Repository annotations -->
    <context:component-scan base-package="org.jax.mgi.fewi"/>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven />
    <!--
    <mvc:interceptors>
       <bean class="org.jax.mgi.fewi.interceptor.BotInterceptor" />
    </mvc:interceptors> 
    -->
    
     <bean id="contentNegotiatingViewResolver" 
            class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <property name="ignoreAcceptHeader" value="true" />
        <property name="mediaTypes">
            <map>
                <entry key="xls"  value="application/vnd.ms-excel"/>
                <entry key="xlsx"  value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>
                <entry key="txt"  value="text/plain"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean id="excelBundleResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
                    <property name="basename" value="excelviews" />
                </bean>
                <bean id="textBundleResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
                    <property name="basename" value="textviews" />
                </bean>
            </list>
        </property>
    </bean>
    
        <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="2" />
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="exposedContextBeanNames">
            <list>
                <value>externalUrls</value>
                <value>configBean</value>
            </list>
        </property>
    </bean>


    
    <!-- allows file uploading to work and sets max size -->
    <bean id="multipartResolver"
            class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="25000000"/>
    </bean>
    
    <mvc:resources mapping="/assets/**" location="/"/>

    <!-- Allows static resources to be accessed through the Spring DispatcherServlet -->
    <mvc:default-servlet-handler />
</beans>
